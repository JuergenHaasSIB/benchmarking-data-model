-- MySQL Script generated by MySQL Workbench
-- 12/19/16 16:12:29
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contact` (
  `idContact` INT NOT NULL,
  `Surname` VARCHAR(45) NULL,
  `Name` VARCHAR(45) NULL,
  `Comment` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`idContact`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CommunityStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CommunityStatus` (
  `idCommunityStatus` INT NOT NULL,
  `Value` VARCHAR(45) NULL,
  PRIMARY KEY (`idCommunityStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Community`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Community` (
  `idCommunity` VARCHAR(10) NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Description` VARCHAR(255) NULL,
  `URLBench` VARCHAR(45) NULL,
  `CommunityContact` INT NOT NULL,
  `CommunityStatus` INT NOT NULL,
  PRIMARY KEY (`idCommunity`),
  INDEX `fk_Community_Contact_idx` (`CommunityContact` ASC),
  INDEX `fk_Community_CommunityStatus1_idx` (`CommunityStatus` ASC),
  CONSTRAINT `fk_Community_Contact`
    FOREIGN KEY (`CommunityContact`)
    REFERENCES `mydb`.`Contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Community_CommunityStatus1`
    FOREIGN KEY (`CommunityStatus`)
    REFERENCES `mydb`.`CommunityStatus` (`idCommunityStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contact` (
  `idContact` INT NOT NULL,
  `Surname` VARCHAR(45) NULL,
  `Name` VARCHAR(45) NULL,
  `Comment` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`idContact`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ToolStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ToolStatus` (
  `idToolStatus` INT NOT NULL,
  `Value` VARCHAR(45) NULL,
  PRIMARY KEY (`idToolStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`References`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`References` (
  `idReferences` INT NOT NULL,
  `PubmedId` VARCHAR(45) NULL,
  PRIMARY KEY (`idReferences`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tool`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tool` (
  `idTool` INT NOT NULL,
  `BioToolsId` VARCHAR(45) NULL,
  `Name` VARCHAR(45) NULL,
  `Description` VARCHAR(45) NULL,
  `Automated` TINYINT(1) NULL,
  `resultsReport` VARCHAR(45) NULL,
  `idCommunity` VARCHAR(10) NOT NULL,
  `ToolContact` INT NOT NULL,
  `ToolStatus` INT NOT NULL,
  `idReference` INT NOT NULL,
  PRIMARY KEY (`idTool`),
  INDEX `fk_Tool_Community1_idx` (`idCommunity` ASC),
  INDEX `fk_Tool_Contact1_idx` (`ToolContact` ASC),
  INDEX `fk_Tool_ToolStatus1_idx` (`ToolStatus` ASC),
  INDEX `fk_Tool_References1_idx` (`idReference` ASC),
  CONSTRAINT `fk_Tool_Community1`
    FOREIGN KEY (`idCommunity`)
    REFERENCES `mydb`.`Community` (`idCommunity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tool_Contact1`
    FOREIGN KEY (`ToolContact`)
    REFERENCES `mydb`.`Contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tool_ToolStatus1`
    FOREIGN KEY (`ToolStatus`)
    REFERENCES `mydb`.`ToolStatus` (`idToolStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tool_References1`
    FOREIGN KEY (`idReference`)
    REFERENCES `mydb`.`References` (`idReferences`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ToolAccessType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ToolAccessType` (
  `idToolAccessType` INT NOT NULL,
  `Description` VARCHAR(45) NULL,
  PRIMARY KEY (`idToolAccessType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tool_has_ToolAccessType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tool_has_ToolAccessType` (
  `idTool` INT NOT NULL,
  `idToolAccessType` INT NOT NULL,
  `Link` VARCHAR(45) NULL,
  PRIMARY KEY (`idTool`, `idToolAccessType`),
  INDEX `fk_Tool_has_ToolAccessType_ToolAccessType1_idx` (`idToolAccessType` ASC),
  INDEX `fk_Tool_has_ToolAccessType_Tool1_idx` (`idTool` ASC),
  CONSTRAINT `fk_Tool_has_ToolAccessType_Tool1`
    FOREIGN KEY (`idTool`)
    REFERENCES `mydb`.`Tool` (`idTool`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tool_has_ToolAccessType_ToolAccessType1`
    FOREIGN KEY (`idToolAccessType`)
    REFERENCES `mydb`.`ToolAccessType` (`idToolAccessType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`BenchmarkingEvent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`BenchmarkingEvent` (
  `idBenchmarkingEvent` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Automatic` TINYINT(1) NULL,
  `DateCreation` DATETIME NULL,
  `DateModification` DATETIME NULL,
  `BenchStart` DATETIME NULL,
  `BenchClose` DATETIME NULL,
  `URL` VARCHAR(45) NULL,
  `idCommunity` VARCHAR(10) NOT NULL,
  `idContact` INT NOT NULL,
  `idReference` INT NOT NULL,
  PRIMARY KEY (`idBenchmarkingEvent`),
  INDEX `fk_BenchmarkingEvent_Community1_idx` (`idCommunity` ASC),
  INDEX `fk_BenchmarkingEvent_Contact1_idx` (`idContact` ASC),
  INDEX `fk_BenchmarkingEvent_References1_idx` (`idReference` ASC),
  CONSTRAINT `fk_BenchmarkingEvent_Community1`
    FOREIGN KEY (`idCommunity`)
    REFERENCES `mydb`.`Community` (`idCommunity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BenchmarkingEvent_Contact1`
    FOREIGN KEY (`idContact`)
    REFERENCES `mydb`.`Contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BenchmarkingEvent_References1`
    FOREIGN KEY (`idReference`)
    REFERENCES `mydb`.`References` (`idReferences`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Dataset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Dataset` (
  `idDataset` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Description` VARCHAR(45) NULL,
  `DataLink` VARCHAR(45) NULL,
  `Type` VARCHAR(45) NULL,
  `Creator` INT NOT NULL,
  `DateCreated` DATETIME NULL,
  `Version` VARCHAR(45) NULL,
  `LastModified` DATETIME NULL,
  PRIMARY KEY (`idDataset`),
  INDEX `fk_Dataset_Contact1_idx` (`Creator` ASC),
  CONSTRAINT `fk_Dataset_Contact1`
    FOREIGN KEY (`Creator`)
    REFERENCES `mydb`.`Contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TestEvent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TestEvent` (
  `idTestEvent` INT NOT NULL,
  `InputDataset` INT NOT NULL,
  `OutputDataset` INT NOT NULL,
  `idTool` INT NOT NULL,
  `idBenchmarkingEvent` INT NOT NULL,
  `Metadata` VARCHAR(45) NULL,
  PRIMARY KEY (`idTestEvent`),
  INDEX `fk_TestData_Dataset1_idx` (`InputDataset` ASC),
  INDEX `fk_TestData_Dataset2_idx` (`OutputDataset` ASC),
  INDEX `fk_TestData_Tool1_idx` (`idTool` ASC),
  INDEX `fk_TestData_BenchmarkingEvent1_idx` (`idBenchmarkingEvent` ASC),
  CONSTRAINT `fk_TestData_Dataset1`
    FOREIGN KEY (`InputDataset`)
    REFERENCES `mydb`.`Dataset` (`idDataset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestData_Dataset2`
    FOREIGN KEY (`OutputDataset`)
    REFERENCES `mydb`.`Dataset` (`idDataset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestData_Tool1`
    FOREIGN KEY (`idTool`)
    REFERENCES `mydb`.`Tool` (`idTool`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TestData_BenchmarkingEvent1`
    FOREIGN KEY (`idBenchmarkingEvent`)
    REFERENCES `mydb`.`BenchmarkingEvent` (`idBenchmarkingEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Metrics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Metrics` (
  `idMetrics` INT NOT NULL,
  `Description` VARCHAR(45) NULL,
  `Author` INT NOT NULL,
  `idReference` INT NOT NULL,
  `Title` VARCHAR(45) NULL,
  `FormalDefinition` VARCHAR(45) NULL,
  `ExecutionType` VARCHAR(45) NULL,
  `DataSchemas` VARCHAR(45) NULL,
  PRIMARY KEY (`idMetrics`),
  INDEX `fk_Metrics_Contact1_idx` (`Author` ASC),
  INDEX `fk_Metrics_References1_idx` (`idReference` ASC),
  CONSTRAINT `fk_Metrics_Contact1`
    FOREIGN KEY (`Author`)
    REFERENCES `mydb`.`Contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Metrics_References1`
    FOREIGN KEY (`idReference`)
    REFERENCES `mydb`.`References` (`idReferences`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ResultReport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ResultReport` (
  `idResultReport` INT NOT NULL,
  `Date` DATETIME NULL,
  `Status` INT NULL,
  `ResultReport` VARCHAR(45) NULL,
  `idTestEvent` INT NOT NULL,
  `idMetrics` INT NOT NULL,
  PRIMARY KEY (`idResultReport`),
  INDEX `fk_ResultReport_TestEvent1_idx` (`idTestEvent` ASC),
  INDEX `fk_ResultReport_Metrics1_idx` (`idMetrics` ASC),
  CONSTRAINT `fk_ResultReport_TestEvent1`
    FOREIGN KEY (`idTestEvent`)
    REFERENCES `mydb`.`TestEvent` (`idTestEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ResultReport_Metrics1`
    FOREIGN KEY (`idMetrics`)
    REFERENCES `mydb`.`Metrics` (`idMetrics`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Dataset_has_Metrics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Dataset_has_Metrics` (
  `idDataset` INT NOT NULL,
  `idMetrics` INT NOT NULL,
  PRIMARY KEY (`idDataset`, `idMetrics`),
  INDEX `fk_Dataset_has_Metrics_Metrics1_idx` (`idMetrics` ASC),
  INDEX `fk_Dataset_has_Metrics_Dataset1_idx` (`idDataset` ASC),
  CONSTRAINT `fk_Dataset_has_Metrics_Dataset1`
    FOREIGN KEY (`idDataset`)
    REFERENCES `mydb`.`Dataset` (`idDataset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dataset_has_Metrics_Metrics1`
    FOREIGN KEY (`idMetrics`)
    REFERENCES `mydb`.`Metrics` (`idMetrics`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
